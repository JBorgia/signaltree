name: Bundle Size Monitor

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

jobs:
  bundle-size-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm run build

      - name: Run bundle size check
        id: bundle-check
        run: |
          echo "Running bundle size analysis..."
          npm run size:check
          echo "bundle-check-result=$?" >> $GITHUB_OUTPUT

      - name: Generate bundle report
        id: bundle-report
        run: |
          echo "Generating detailed bundle report..."
          npm run size:report > bundle-report.txt
          echo "Generated bundle report"

          # Create a summary for PR comments
          echo "## üì¶ Bundle Size Report" > bundle-summary.md
          echo "" >> bundle-summary.md
          echo "### Package Sizes (Gzipped)" >> bundle-summary.md
          echo "" >> bundle-summary.md
          echo "| Package | Size | Target | Status |" >> bundle-summary.md
          echo "|---------|------|--------|--------|" >> bundle-summary.md

          # Extract package information and format for markdown table
          grep "‚úÖ\|‚ùå" bundle-report.txt | while read line; do
            if [[ $line == *"‚úÖ"* ]]; then
              package=$(echo $line | sed 's/.*‚úÖ \([^:]*\):.*/\1/')
              size=$(echo $line | sed 's/.*: \([^(]*\).*/\1/' | tr -d ' ')
              target=$(echo $line | sed 's/.*(target: \([^)]*\)).*/\1/')
              echo "| $package | $size | $target | ‚úÖ |" >> bundle-summary.md
            elif [[ $line == *"‚ùå"* ]]; then
              package=$(echo $line | sed 's/.*‚ùå \([^:]*\):.*/\1/')
              size=$(echo $line | sed 's/.*: \([^(]*\).*/\1/' | tr -d ' ')
              target=$(echo $line | sed 's/.*(target: \([^)]*\)).*/\1/')
              echo "| $package | $size | $target | ‚ùå |" >> bundle-summary.md
            fi
          done

          echo "" >> bundle-summary.md

          # Add summary statistics
          total_packages=$(grep -c "‚úÖ\|‚ùå" bundle-report.txt)
          passing_packages=$(grep -c "‚úÖ" bundle-report.txt)
          failing_packages=$(grep -c "‚ùå" bundle-report.txt)

          echo "### Summary" >> bundle-summary.md
          echo "- **Total Packages**: $total_packages" >> bundle-summary.md
          echo "- **Passing**: $passing_packages ‚úÖ" >> bundle-summary.md
          echo "- **Failing**: $failing_packages ‚ùå" >> bundle-summary.md

          if [ $failing_packages -gt 0 ]; then
            echo "" >> bundle-summary.md
            echo "### ‚ö†Ô∏è Action Required" >> bundle-summary.md
            echo "Some packages exceed their size targets. Please review and optimize:" >> bundle-summary.md
            echo "1. Check the [Bundle Optimization Guide](docs/performance/bundle-optimization.md)" >> bundle-summary.md
            echo "2. Use the [Optimization Checklist](docs/OPTIMIZATION-CHECKLIST.md)" >> bundle-summary.md
            echo "3. Run \`npm run size:report\` locally for detailed analysis" >> bundle-summary.md
          else
            echo "" >> bundle-summary.md
            echo "### ‚úÖ All Good!" >> bundle-summary.md
            echo "All packages are within their size targets." >> bundle-summary.md
          fi

          echo "" >> bundle-summary.md
          echo "<details>" >> bundle-summary.md
          echo "<summary>üìã Full Bundle Report</summary>" >> bundle-summary.md
          echo "" >> bundle-summary.md
          echo "\`\`\`" >> bundle-summary.md
          cat bundle-report.txt >> bundle-summary.md
          echo "\`\`\`" >> bundle-summary.md
          echo "</details>" >> bundle-summary.md

      - name: Upload bundle report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis-report
          path: |
            bundle-report.txt
            bundle-summary.md
          retention-days: 30

      - name: Comment PR with bundle report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = './bundle-summary.md';

            if (fs.existsSync(path)) {
              const bundleReport = fs.readFileSync(path, 'utf8');

              // Find existing bundle size comment
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });

              const botComment = comments.find(comment =>
                comment.user.type === 'Bot' &&
                comment.body.includes('üì¶ Bundle Size Report')
              );

              if (botComment) {
                // Update existing comment
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: bundleReport
                });
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: bundleReport
                });
              }
            }

      - name: Fail if bundle check failed
        if: steps.bundle-check.outputs.bundle-check-result != '0'
        run: |
          echo "‚ùå Bundle size check failed. Some packages exceed their size targets."
          echo "Please review the bundle report and optimize the failing packages."
          echo "See docs/performance/bundle-optimization.md for guidance."
          exit 1

      - name: Success message
        if: steps.bundle-check.outputs.bundle-check-result == '0'
        run: |
          echo "‚úÖ All packages pass bundle size requirements!"
          echo "Bundle size monitoring completed successfully."
