{
  "name": "@signaltree/workspace",
  "version": "3.0.2",
  "license": "BSL-1.1",
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/<you>"
  },
  "author": "Jonathan D Borgia",
  "homepage": "https://github.com/JBorgia/signaltree#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/JBorgia/signaltree.git"
  },
  "bugs": {
    "url": "https://github.com/JBorgia/signaltree/issues"
  },
  "scripts": {
    "build": "nx build",
    "test": "nx test",
    "lint": "nx lint",
    "serve": "nx serve",
    "e2e": "nx e2e",
    "start": "nx serve demo",
    "build:lib": "nx build signaltree --configuration=production",
    "build:demo": "nx build demo",
    "deploy": "npm run build:demo:prod && npm run deploy:gh-pages",
    "build:demo:prod": "nx build demo --configuration=production --base-href=/",
    "deploy:gh-pages": "gh-pages -d dist/apps/demo/browser",
    "test:lib": "nx test signaltree",
    "test:demo": "nx test demo",
    "test:demo:direct": "npx jest --config=apps/demo/jest.config.ts",
    "test:watch": "nx test --watch",
    "test:ci": "nx test --watch=false --browsers=ChromeHeadless",
    "lint:fix": "nx lint --fix",
    "format": "nx format:write",
    "format:check": "nx format:check",
    "docs": "typedoc",
    "docs:serve": "typedoc --serve",
    "affected:build": "nx affected:build",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:e2e": "nx affected:e2e",
    "affected": "nx affected",
    "graph": "nx graph",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "publish": "npm run publish:all",
    "publish:dry-run": "npm run publish:all -- --dry-run",
    "release": "./scripts/release.sh patch",
    "release:minor": "./scripts/release.sh minor",
    "release:major": "./scripts/release.sh major",
    "release:patch": "./scripts/release.sh patch",
    "// Enhanced Build Scripts": "Scripts for efficient development and production builds",
    "build:all": "nx run-many -t build --projects=core,async,batching,memoization,devtools,entities,middleware,ng-forms,presets,time-travel,serialization,callable-syntax",
    "build:core": "nx build core",
    "build:serialization": "nx build serialization",
    "build:callable-syntax": "nx build callable-syntax",
    "build:packages": "nx run-many -t build --projects=async,batching,memoization,devtools,entities,middleware,ng-forms,presets,time-travel,serialization,callable-syntax",
    "build:production": "nx run-many -t build --configuration=production --projects=core,async,batching,memoization,devtools,entities,middleware,ng-forms,presets,time-travel,serialization,callable-syntax",
    "// Testing Scripts": "Comprehensive testing workflows",
    "test:all": "nx run-many -t test --projects=core,async,batching,memoization,devtools,entities,middleware,ng-forms,presets,time-travel,serialization,callable-syntax",
    "test:core": "nx test core",
    "test:serialization": "nx test serialization",
    "test:callable-syntax": "nx test callable-syntax",
    "test:performance": "nx test core --testNamePattern=\"performance\"",
    "test:recursive": "nx test core --testNamePattern=\"recursive\"",
    "test:coverage": "nx run-many -t test --codeCoverage --projects=core,async,batching,memoization,devtools,entities,middleware,ng-forms,presets,time-travel,serialization,callable-syntax",
    "// Linting & Quality": "Code quality and formatting",
    "lint:all": "nx run-many -t lint --projects=core,async,batching,memoization,devtools,entities,middleware,ng-forms,presets,time-travel,callable-syntax,demo",
    "lint:core": "nx lint core",
    "lint:callable-syntax": "nx lint callable-syntax",
    "lint:fix:all": "nx run-many -t lint --fix --projects=core,async,batching,memoization,devtools,entities,middleware,ng-forms,presets,time-travel,callable-syntax,demo",
    "quality:check": "npm run lint:all && npm run test:all && npm run build:all",
    "quality:simple": "npm run test:core && npm run build:core",
    "quality:fix": "npm run lint:fix:all && npm run test:all",
    "// Development Workflow": "Complete development workflows",
    "dev": "nx serve demo",
    "dev:build": "npm run build:core && nx serve demo",
    "dev:check": "npm run test:core && npm run lint:core",
    "dev:callable-syntax": "npm run build:callable-syntax && npm run test:callable-syntax",
    "clean": "nx reset && rm -rf dist node_modules/.cache",
    "clean:build": "npm run clean && pnpm install && npm run build:all",
    "// Publishing & Release": "Streamlined publishing workflows",
    "prepublish": "node scripts/ci-checks.js --jsdoc --sizes && npm run quality:check && npm run build:production",
    "publish:packages": "npm run prepublish && nx run-many -t build --configuration=production",
    "publish:all": "npm run prepublish && ./scripts/publish-all.sh",
    "// Performance & Analysis": "Performance testing and bundle analysis",
    "perf:test": "npm run test:performance",
    "perf:build": "npm run build:production && npm run analyze:bundle",
    "perf:run": "node scripts/perf-suite.js",
    "automation:export": "node --loader ts-node/esm scripts/playwright/run-benchmark-export.ts",
    "automation:export:cjs": "node scripts/playwright/run-benchmark-export.cjs",
    "automation:export:all": "node scripts/playwright/run-benchmark-export-all.cjs",
    "analyze:bundle": "node scripts/consolidated-bundle-analysis.js",
    "analyze:deps": "nx graph",
    "size:report": "node scripts/consolidated-bundle-analysis.js",
    "size:check": "node scripts/consolidated-bundle-analysis.js",
    "verify:jsdoc": "node scripts/verify-jsdoc-stripping.js",
    "postbuild": "node scripts/rollup-declarations.js && npm run verify:jsdoc",
    "size:validate": "node scripts/consolidated-bundle-analysis.js",
    "// Callable Syntax": "Callable syntax transformation tooling and testing",
    "callable:demo": "cd packages/callable-syntax && node src/lib/demo.js",
    "callable:test": "npm run build:callable-syntax && npm run test:callable-syntax",
    "callable:validate": "npm run build:callable-syntax && cd dist/packages/callable-syntax && node -e \"console.log('Package structure:', require('./package.json'))\"",
    "// Maintenance": "Workspace maintenance and updates",
    "update:deps": "nx migrate latest && npm install && nx migrate --run-migrations",
    "workspace:info": "nx report"
  },
  "private": true,
  "dependencies": {
    "@angular/common": "~20.1.0",
    "@angular/compiler": "~20.1.0",
    "@angular/core": "~20.1.0",
    "@angular/forms": "~20.1.0",
    "@angular/platform-browser": "~20.1.0",
    "@angular/platform-browser-dynamic": "~20.1.0",
    "@angular/router": "~20.1.0",
    "@datorama/akita": "^8.0.1",
    "@ngneat/elf": "^2.5.1",
    "@ngneat/elf-entities": "^5.0.2",
    "@ngrx/effects": "^20.0.1",
    "@ngrx/signals": "^20.0.1",
    "@ngrx/store": "^20.0.1",
    "@ngrx/store-devtools": "^20.0.1",
    "@ngxs/store": "^20.1.0",
    "@vercel/node": "^5.3.26",
    "chart.js": "^4.5.0",
    "echarts": "^6.0.0",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "ngx-echarts": "^20.0.2",
    "rxjs": "~7.8.0",
    "web-vitals": "^5.1.0",
    "zone.js": "~0.15.0"
  },
  "devDependencies": {
    "@angular-devkit/core": "~20.1.0",
    "@angular-devkit/schematics": "~20.1.0",
    "@angular/build": "~20.1.0",
    "@angular/cli": "~20.1.0",
    "@angular/compiler-cli": "~20.1.0",
    "@angular/language-service": "~20.1.0",
    "@babel/generator": "^7.28.3",
    "@babel/parser": "^7.28.4",
    "@babel/traverse": "^7.28.4",
    "@babel/types": "^7.28.4",
    "@eslint/js": "^9.8.0",
    "@microsoft/api-extractor": "^7.36.0",
    "@nx/angular": "21.3.9",
    "@nx/devkit": "21.3.9",
    "@nx/eslint": "21.3.9",
    "@nx/eslint-plugin": "21.3.9",
    "@nx/jest": "21.3.9",
    "@nx/js": "21.3.9",
    "@nx/playwright": "21.3.9",
    "@nx/web": "21.3.9",
    "@nx/workspace": "21.3.9",
    "@playwright/test": "^1.36.0",
    "@schematics/angular": "~20.1.0",
    "@swc-node/register": "~1.9.1",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "@types/jest": "^30.0.0",
    "@types/lodash": "^4.17.20",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "22.18.1",
    "@typescript-eslint/utils": "^8.29.0",
    "angular-eslint": "^20.0.0",
    "autoprefixer": "^10.4.0",
    "esbuild": "^0.25.8",
    "eslint": "^9.8.0",
    "eslint-config-prettier": "^10.0.0",
    "eslint-plugin-playwright": "^1.6.2",
    "gh-pages": "^6.3.0",
    "jest": "^30.0.2",
    "jest-environment-jsdom": "^30.0.2",
    "jest-environment-node": "^30.0.2",
    "jest-preset-angular": "~15.0.0",
    "jest-util": "^30.0.2",
    "jsonc-eslint-parser": "^2.1.0",
    "ng-packagr": "~20.1.0",
    "nx": "21.3.9",
    "playwright": "^1.55.0",
    "postcss": "^8.4.5",
    "postcss-url": "~10.1.3",
    "prettier": "^2.6.2",
    "source-map-explorer": "^2.5.3",
    "ts-jest": "^29.4.0",
    "ts-node": "10.9.1",
    "tslib": "^2.3.0",
    "typedoc": "^0.28.10",
    "typescript": "~5.8.2",
    "typescript-eslint": "^8.29.0",
    "verdaccio": "^6.0.5"
  },
  "nx": {
    "includedScripts": []
  }
}
